@{
    ViewData["Title"] = "Dữ liệu chi tiết Doanh nghiệp";
    Layout = null;
    @model List<QLKH>
}

<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <!-- DataTables CSS -->
    <link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/responsive/2.5.0/css/responsive.bootstrap5.min.css" rel="stylesheet">

    <style>
        /* Reset và Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            background-attachment: fixed;
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
        }

        /* Header Navigation */
        .top-nav {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1rem 0;
            box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
            border-bottom: 3px solid #667eea;
        }

        .nav-brand {
            color: #667eea;
            font-size: 1.8rem;
            font-weight: 700;
            text-decoration: none;
            display: flex;
            align-items: center;
            transition: all 0.3s ease;
        }

        .nav-brand:hover {
            color: #764ba2;
            text-decoration: none;
            transform: translateY(-2px);
        }

        .nav-brand i {
            margin-right: 0.5rem;
            font-size: 2rem;
        }

        .nav-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .btn-action {
            padding: 0.5rem 1.5rem;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .btn-primary-custom {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .btn-primary-custom:hover {
            background: linear-gradient(135deg, #764ba2, #667eea);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
            color: white;
            text-decoration: none;
        }

        .btn-outline-custom {
            background: transparent;
            color: #667eea;
            border: 2px solid #667eea;
        }

        .btn-outline-custom:hover {
            background: #667eea;
            color: white;
            text-decoration: none;
        }

        /* Main Container */
        .main-container {
            padding: 2rem 0;
            min-height: calc(100vh - 100px);
        }

        .content-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .card-header-custom {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem;
            text-align: center;
            border: none;
        }

        .card-header-custom h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }

        .card-header-custom p {
            font-size: 1.1rem;
            opacity: 0.9;
            margin: 0;
        }

        /* Statistics Cards */
        .stats-section {
            padding: 2rem;
            background: #f8f9fa;
        }

        .stat-card {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            border: 1px solid #e9ecef;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: #667eea;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            font-size: 1rem;
            color: #6c757d;
            font-weight: 500;
        }

        /* Table Container */
        .table-section {
            padding: 0;
        }

        .table-container {
            padding: 2rem;
            background: white;
        }

        .table-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .table-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
            margin: 0;
        }

        .table-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        /* Enhanced DataTable Styling */
        .dataTables_wrapper {
            padding: 0;
        }

        .dataTables_filter {
            margin-bottom: 1rem;
        }

        .dataTables_filter input {
            border: 2px solid #e9ecef;
            border-radius: 25px;
            padding: 0.5rem 1rem;
            margin-left: 0.5rem;
            transition: all 0.3s ease;
        }

        .dataTables_filter input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .dataTables_length select {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 0.25rem 0.5rem;
            margin: 0 0.5rem;
        }

        /* Table Styling */
        #dataTable {
            border-collapse: separate;
            border-spacing: 0;
            width: 100% !important;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }

        #dataTable thead th {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            font-weight: 600;
            padding: 1rem 0.75rem;
            text-align: center;
            border: none;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        #dataTable tbody td {
            padding: 0.75rem;
            border-bottom: 1px solid #e9ecef;
            vertical-align: middle;
            font-size: 0.9rem;
            transition: background-color 0.2s ease;
        }

        #dataTable tbody tr {
            transition: all 0.2s ease;
        }

        #dataTable tbody tr:hover {
            background-color: #f8f9fa;
            transform: scale(1.01);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        #dataTable tbody tr:nth-child(even) {
            background-color: #fafbfc;
        }

        #dataTable tbody tr:nth-child(even):hover {
            background-color: #f1f3f4;
        }

        /* Responsive Design */
        @@media(max - width: 768px) {
                .nav-brand {
                    font-size: 1.4rem;
                }

                .nav-brand i {
                    font-size: 1.6rem;
                }

                .card-header-custom h1 {
                    font-size: 1.8rem;
                }

                .card-header-custom p {
                    font-size: 1rem;
                }

                .table-container {
                    padding: 1rem;
                }

                .table-header {
                    flex-direction: column;
                    align-items: stretch;
                }

                .table-controls {
                    justify-content: center;
                }

                #dataTable {
                    font-size: 0.8rem;
                }

                #dataTable thead th,
                #dataTable tbody td {
                    padding: 0.5rem 0.25rem;
                }
            }

            /* Custom Scrollbar */
            .table-responsive::-webkit-scrollbar {
                height: 8px;
            }

            .table-responsive::-webkit-scrollbar-track {
                background: #f1f1f1;
                border-radius: 10px;
            }

            .table-responsive::-webkit-scrollbar-thumb {
                background: linear-gradient(135deg, #667eea, #764ba2);
                border-radius: 10px;
            }

            .table-responsive::-webkit-scrollbar-thumb:hover {
                background: linear-gradient(135deg, #764ba2, #667eea);
            }

            /* Loading Animation */
            .loading {
                text-align: center;
                padding: 3rem;
                color: #667eea;
            }

            .spinner {
                border: 4px solid #f3f3f3;
                border-top: 4px solid #667eea;
                border-radius: 50%;
                width: 40px;
                height: 40px;
                animation: spin 1s linear infinite;
                margin: 0 auto 1rem;
            }

            @@keyframes spin {
                    0% {
                        transform: rotate(0deg);
                    }

                    100% {
                        transform: rotate(360deg);
                    }
                }

                /* Performance optimizations */
                * {
                    will-change: auto;
                }

                .stat-value {
                    will-change: contents;
                }

                #dataTable {
                    contain: layout style;
                }

                .table-responsive {
                    contain: layout style;
                    scroll-behavior: smooth;
                }

                /* Optimize animation performance */
                .stat-card:hover {
                    will-change: transform, box-shadow;
                }

                .btn-action:hover {
                    will-change: transform, background-color;
                }

                /* Lazy loading indicators */
                .skeleton-loader {
                    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
                    background-size: 200% 100%;
                    animation: loading 1.5s infinite;
                }

                @@keyframes loading {
                        0% {
                            background-position: 200% 0;
                        }

                        100% {
                            background-position: -200% 0;
                        }
                    }

                    /* No Data State */
                    .no-data {
                        text-align: center;
                        padding: 4rem 2rem;
                        color: #6c757d;
                    }

                    .no-data i {
                        font-size: 4rem;
                        color: #dee2e6;
                        margin-bottom: 1rem;
                    }

                    .no-data h3 {
                        color: #495057;
                        margin-bottom: 1rem;
                    }

                    /* Pagination Styling */
                    .dataTables_paginate .paginate_button {
                        border-radius: 5px !important;
                        margin: 0 2px !important;
                        padding: 0.5rem 0.75rem !important;
                        border: 1px solid #dee2e6 !important;
                        background: white !important;
                        color: #667eea !important;
                    }

                    .dataTables_paginate .paginate_button:hover {
                        background: #667eea !important;
                        color: white !important;
                        border-color: #667eea !important;
                    }

                    .dataTables_paginate .paginate_button.current {
                        background: #667eea !important;
                        color: white !important;
                        border-color: #667eea !important;
                    }

                    /* DataTables Info */
                    .dataTables_info {
                        color: #6c757d;
                        font-size: 0.9rem;
                        padding-top: 1rem;
                    }

                    /* Export Buttons */
                    .export-buttons {
                        display: flex;
                        gap: 0.5rem;
                        flex-wrap: wrap;
                    }

                    .btn-export {
                        padding: 0.4rem 1rem;
                        border-radius: 20px;
                        border: none;
                        font-size: 0.85rem;
                        font-weight: 600;
                        transition: all 0.3s ease;
                        text-decoration: none;
                        display: inline-flex;
                        align-items: center;
                        gap: 0.5rem;
                    }

                    .btn-excel {
                        background: #28a745;
                        color: white;
                    }

                    .btn-excel:hover {
                        background: #218838;
                        transform: translateY(-2px);
                        color: white;
                        text-decoration: none;
                    }

                    .btn-pdf {
                        background: #dc3545;
                        color: white;
                    }

                    .btn-pdf:hover {
                        background: #c82333;
                        transform: translateY(-2px);
                        color: white;
                        text-decoration: none;
                    }

                    .btn-print {
                        background: #6f42c1;
                        color: white;
                    }

                    .btn-print:hover {
                        background: #5a32a3;
                        transform: translateY(-2px);
                        color: white;
                        text-decoration: none;
                    }

                    /* Footer */
                    .footer {
                        background: rgba(255, 255, 255, 0.9);
                        backdrop-filter: blur(10px);
                        padding: 1rem 0;
                        text-align: center;
                        color: #6c757d;
                        margin-top: 2rem;
                    }
                </style>
            </head>

            <body>
                <!-- Top Navigation -->
                <nav class="top-nav">
                    <div class="container-fluid">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <a href="@Url.Action("Index", "DN")" class="nav-brand">
                                    <i class="fas fa-database"></i>
                                    Dữ liệu Chi tiết Doanh nghiệp
                                </a>
                            </div>
                            <div class="col-md-4">
                                <div class="nav-actions">
                                    <a href="@Url.Action("Index", "DN")" class="btn-action btn-outline-custom">
                                        <i class="fas fa-arrow-left me-2"></i>
                                        Quay lại Dashboard
                                    </a>
                                    <button onclick="window.print()" class="btn-action btn-primary-custom">
                                        <i class="fas fa-print me-2"></i>
                                        In
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </nav>

                <!-- Main Container -->
                <div class="main-container">
                    <div class="container-fluid">
                        <div class="content-card">
                            <!-- Header -->
                            <div class="card-header-custom">
                                <h1><i class="fas fa-table me-3"></i>Dữ liệu Chi tiết Doanh nghiệp</h1>
                                <p>Xem toàn bộ dữ liệu doanh nghiệp với đầy đủ thông tin chi tiết</p>
                            </div>

                            <!-- Statistics Section -->
                            <div class="stats-section">
                                <div class="row">
                                    <div class="col-md-3 col-sm-6 mb-3">
                                        <div class="stat-card">
                                            <div class="stat-value" id="totalRecords">
                                                <div class="spinner-border spinner-border-sm text-primary" role="status"></div>
                                            </div>
                                            <div class="stat-label">Tổng số bản ghi</div>
                                        </div>
                                    </div>
                                    <div class="col-md-3 col-sm-6 mb-3">
                                        <div class="stat-card">
                                            <div class="stat-value" id="withTaxCode">
                                                <div class="spinner-border spinner-border-sm text-primary" role="status"></div>
                                            </div>
                                            <div class="stat-label">Có mã số thuế</div>
                                        </div>
                                    </div>
                                    <div class="col-md-3 col-sm-6 mb-3">
                                        <div class="stat-card">
                                            <div class="stat-value" id="withEmail">
                                                <div class="spinner-border spinner-border-sm text-primary" role="status"></div>
                                            </div>
                                            <div class="stat-label">Có email</div>
                                        </div>
                                    </div>
                                    <div class="col-md-3 col-sm-6 mb-3">
                                        <div class="stat-card">
                                            <div class="stat-value" id="withPhone">
                                                <div class="spinner-border spinner-border-sm text-primary" role="status"></div>
                                            </div>
                                            <div class="stat-label">Có điện thoại</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Table Section -->
                            <div class="table-section">
                                <div class="table-container">
                                    <div class="table-header">
                                        <h3 class="table-title">
                                            <i class="fas fa-list me-2"></i>
                                            Bảng dữ liệu (<span id="recordCount">Loading...</span> bản ghi)
                                        </h3>
                                        <div class="table-controls">
                                            <div class="export-buttons">
                                                <button onclick="exportToExcel()" class="btn-export btn-excel">
                                                    <i class="fas fa-file-excel"></i>
                                                    Excel
                                                </button>
                                                <button onclick="exportToPDF()" class="btn-export btn-pdf">
                                                    <i class="fas fa-file-pdf"></i>
                                                    PDF
                                                </button>
                                                <button onclick="printTable()" class="btn-export btn-print">
                                                    <i class="fas fa-print"></i>
                                                    In
                                                </button>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Loading State -->
                                    <div id="tableLoading" class="loading">
                                        <div class="spinner"></div>
                                        <p>Đang tải dữ liệu...</p>
                                    </div>

                                    <!-- Table Container -->
                                    <div id="tableContainer" class="table-responsive" style="display: none;">
                                        <table id="dataTable" class="table table-striped table-hover">
                                            <thead>
                                                <tr>
                                                    <th>STT</th>
                                                    <th>Năm</th>
                                                    <th>Mã số thuế</th>
                                                    <th>Tên doanh nghiệp</th>
                                                    <th>Loại hình KT</th>
                                                    <th>Tỉnh/TP</th>
                                                    <th>Huyện/Quận</th>
                                                    <th>Xã/Phường</th>
                                                    <th>Địa chỉ</th>
                                                    <th>Điện thoại</th>
                                                    <th>Email</th>
                                                    <th>Vùng KT</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <!-- Data will be loaded via AJAX -->
                                            </tbody>
                                        </table>
                                    </div>

                                    <!-- Error State -->
                                    <div id="tableError" class="no-data" style="display: none;">
                                        <i class="fas fa-exclamation-triangle"></i>
                                        <h3>Lỗi tải dữ liệu</h3>
                                        <p>Không thể tải dữ liệu từ server. Vui lòng thử lại sau.</p>
                                        <button onclick="location.reload()" class="btn-action btn-primary-custom mt-3">
                                            <i class="fas fa-refresh me-2"></i>
                                            Thử lại
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Footer -->
                <div class="footer">
                    <div class="container">
                        <p>&copy; @DateTime.Now.Year Công ty TNHH CI Research. Hệ thống quản lý dữ liệu doanh nghiệp.</p>
                    </div>
                </div>

                <!-- Scripts -->
                <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
                <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
                <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
                <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
                <script src="https://cdn.datatables.net/responsive/2.5.0/js/dataTables.responsive.min.js"></script>
                <script src="https://cdn.datatables.net/responsive/2.5.0/js/responsive.bootstrap5.min.js"></script>

                <script>
                    let dataTable;

                    $(document).ready(function () {
                        // Load summary statistics first
                        loadSummaryStats();

                        // Initialize DataTable with server-side processing
                        setTimeout(function () {
                            initializeDataTable();
                        }, 1000); // Small delay to show loading state
                    });

                    function loadSummaryStats() {
                        console.log('🔍 Loading summary statistics...');

                        $.get('/DN/GetDataSummary')
                            .done(function (response) {
                                if (response.success) {
                                    console.log('✅ Summary stats loaded:', response);

                                    // Update statistics cards with animation
                                    animateValue('totalRecords', 0, response.totalRecords, 1000);
                                    animateValue('withTaxCode', 0, response.withTaxCode, 1200);
                                    animateValue('withEmail', 0, response.withEmail, 1400);
                                    animateValue('withPhone', 0, response.withPhone, 1600);

                                    // Update record count in table header
                                    $('#recordCount').text(response.totalRecords.toLocaleString());
                                } else {
                                    console.error('❌ Failed to load summary:', response.error);
                                    showError('Không thể tải thống kê tổng quan');
                                }
                            })
                            .fail(function () {
                                console.error('❌ Summary API call failed');
                                showError('Lỗi kết nối API thống kê');
                            });
                    }

                    function initializeDataTable() {
                        console.log('🔍 Initializing server-side DataTable...');

                        try {
                            dataTable = $('#dataTable').DataTable({
                                processing: true,
                                serverSide: true,
                                responsive: true,
                                pageLength: 30, // 30 rows per page as requested
                                lengthMenu: [[15, 30, 50, 100], [15, 30, 50, 100]],
                                ajax: {
                                    url: '/DN/GetPaginatedData',
                                    type: 'POST',
                                    error: function (xhr, error, thrown) {
                                        console.error('❌ DataTable AJAX error:', error, thrown);
                                        console.error('❌ Response:', xhr.responseText);
                                        showTableError();
                                    },
                                    success: function (response) {
                                        console.log('✅ AJAX success response:', response);
                                        if (response.data && response.data.length > 0) {
                                            console.log('📊 Sample data row:', response.data[0]);
                                            console.log('📊 Available properties:', Object.keys(response.data[0]));

                                            // IMMEDIATELY SHOW TABLE WHEN DATA RECEIVED
                                            $('#tableLoading').hide();
                                            $('#tableContainer').show();
                                            console.log('🎯 Table shown immediately after AJAX success!');
                                        }
                                    }
                                },
                                columns: [
                                    {
                                        data: 'stt', // Match API response lowercase
                                        name: 'stt',
                                        defaultContent: '',
                                        className: 'text-center',
                                        render: function (data) {
                                            return data ? '<strong>' + data + '</strong>' : '';
                                        }
                                    },
                                    {
                                        data: 'nam', // Match API response lowercase
                                        name: 'nam',
                                        defaultContent: '',
                                        className: 'text-center',
                                        render: function (data) {
                                            return data ? '<span class="badge bg-primary">' + data + '</span>' : 'N/A';
                                        }
                                    },
                                    {
                                        data: 'masothue', // Match API response lowercase
                                        name: 'masothue',
                                        defaultContent: 'N/A',
                                        className: 'text-center font-monospace',
                                        render: function (data) {
                                            return '<code>' + (data || 'N/A') + '</code>';
                                        }
                                    },
                                    {
                                        data: 'tenDN', // Match API response camelCase
                                        name: 'tenDN',
                                        defaultContent: 'N/A',
                                        render: function (data) {
                                            return '<strong>' + (data || 'N/A') + '</strong>';
                                        }
                                    },
                                    {
                                        data: 'loaihinhkte', // Match API response lowercase
                                        name: 'loaihinhkte',
                                        defaultContent: 'N/A',
                                        render: function (data) {
                                            return data && data !== 'N/A' ? '<span class="badge bg-secondary">' + data + '</span>' : 'N/A';
                                        }
                                    },
                                    {
                                        data: 'maTinh_Dieutra', // Match API response camelCase
                                        name: 'maTinh_Dieutra',
                                        defaultContent: 'N/A'
                                    },
                                    {
                                        data: 'maHuyen_Dieutra', // Match API response camelCase
                                        name: 'maHuyen_Dieutra',
                                        defaultContent: 'N/A'
                                    },
                                    {
                                        data: 'maXa_Dieutra', // Match API response camelCase
                                        name: 'maXa_Dieutra',
                                        defaultContent: 'N/A'
                                    },
                                    {
                                        data: 'diachi', // Match API response lowercase
                                        name: 'diachi',
                                        defaultContent: 'N/A'
                                    },
                                    {
                                        data: 'dienthoai', // Match API response lowercase
                                        name: 'dienthoai',
                                        defaultContent: 'N/A'
                                    },
                                    {
                                        data: 'email', // Match API response lowercase
                                        name: 'email',
                                        defaultContent: 'N/A'
                                    },
                                    {
                                        data: 'region', // Match API response lowercase
                                        name: 'region',
                                        defaultContent: 'N/A',
                                        render: function (data) {
                                            return data && data !== 'N/A' ? '<span class="badge bg-info">' + data + '</span>' : 'N/A';
                                        }
                                    }
                                ],
                                language: {
                                    "sProcessing": '<div class="text-center"><div class="spinner-border text-primary" role="status"><span class="sr-only">Đang tải...</span></div><br>Đang xử lý...</div>',
                                    "sLengthMenu": "Hiển thị _MENU_ mục",
                                    "sZeroRecords": "Không tìm thấy dòng nào phù hợp",
                                    "sInfo": "Đang hiển thị _START_ đến _END_ trong tổng số _TOTAL_ mục",
                                    "sInfoEmpty": "Đang hiển thị 0 đến 0 trong tổng số 0 mục",
                                    "sInfoFiltered": "(được lọc từ _MAX_ mục)",
                                    "sSearch": "Tìm kiếm:",
                                    "oPaginate": {
                                        "sFirst": "Đầu",
                                        "sPrevious": "Trước",
                                        "sNext": "Tiếp",
                                        "sLast": "Cuối"
                                    }
                                },
                                order: [[0, 'asc']],
                                dom: '<"row"<"col-sm-6"l><"col-sm-6"f>>rtip',
                                initComplete: function (settings, json) {
                                    console.log('✅ Server-side DataTable initialized successfully');
                                    console.log('📊 Total records:', json?.recordsTotal);

                                    // FORCE HIDE LOADING AND SHOW TABLE
                                    $('#tableLoading').hide();
                                    $('#tableContainer').show();
                                    console.log('🎯 Table container now visible!');
                                },
                                drawCallback: function (settings) {
                                    console.log('📊 DataTable draw completed. Records:', settings.json?.recordsTotal);

                                    // FORCE SHOW TABLE AFTER EACH DRAW
                                    $('#tableLoading').hide();
                                    $('#tableContainer').show();

                                    // Update record count in header
                                    if (settings.json) {
                                        $('#recordCount').text(settings.json.recordsTotal.toLocaleString());
                                    }

                                    // Enhanced row hover effects
                                    $('#dataTable tbody tr').off('mouseenter mouseleave').hover(
                                        function () { $(this).addClass('table-hover-effect'); },
                                        function () { $(this).removeClass('table-hover-effect'); }
                                    );
                                }
                            });

                            // FORCE SHOW TABLE IMMEDIATELY AFTER CREATION
                            setTimeout(function () {
                                $('#tableLoading').hide();
                                $('#tableContainer').show();
                                console.log('🎯 Force showing table after DataTable creation!');
                            }, 500);

                        } catch (error) {
                            console.error('❌ DataTable initialization error:', error);
                            showTableError();
                        }
                    }

                    // Utility Functions
                    function animateValue(elementId, start, end, duration) {
                        const element = document.getElementById(elementId);
                        const range = end - start;
                        const increment = range / (duration / 16);
                        let current = start;

                        element.innerHTML = start.toLocaleString();

                        const timer = setInterval(function () {
                            current += increment;
                            if (current >= end) {
                                current = end;
                                clearInterval(timer);
                            }
                            element.innerHTML = Math.floor(current).toLocaleString();
                        }, 16);
                    }

                    function showError(message) {
                        // Update statistics cards to show error
                        ['totalRecords', 'withTaxCode', 'withEmail', 'withPhone'].forEach(function (id) {
                            $('#' + id).html('<i class="fas fa-exclamation-triangle text-danger"></i>');
                        });

                        console.error('❌ Error:', message);
                    }

                    function showTableError() {
                        $('#tableLoading').hide();
                        $('#tableContainer').hide();
                        $('#tableError').show();
                    }

                    // Export Functions
                    function exportToExcel() {
                        // Create a simple CSV export
                        var csv = [];
                        var rows = document.querySelectorAll("#dataTable tr");

                        for (var i = 0; i < rows.length; i++) {
                            var row = [], cols = rows[i].querySelectorAll("td, th");

                            for (var j = 0; j < cols.length; j++) {
                                row.push(cols[j].innerText);
                            }

                            csv.push(row.join(","));
                        }

                        // Download CSV file
                        var csvFile = new Blob([csv.join("\n")], { type: "text/csv" });
                        var downloadLink = document.createElement("a");
                        downloadLink.download = "du-lieu-doanh-nghiep.csv";
                        downloadLink.href = window.URL.createObjectURL(csvFile);
                        downloadLink.style.display = "none";
                        document.body.appendChild(downloadLink);
                        downloadLink.click();
                        document.body.removeChild(downloadLink);
                    }

                    function exportToPDF() {
                        window.print();
                    }

                    function printTable() {
                        var printWindow = window.open('', '', 'height=600,width=800');
                        printWindow.document.write('<html><head><title>Dữ liệu Doanh nghiệp</title>');
                        printWindow.document.write('<style>table{width:100%;border-collapse:collapse;}th,td{border:1px solid #ddd;padding:8px;text-align:left;}th{background-color:#f2f2f2;}</style>');
                        printWindow.document.write('</head><body>');
                        printWindow.document.write('<h1>Dữ liệu Chi tiết Doanh nghiệp</h1>');
                        printWindow.document.write(document.getElementById('dataTable').outerHTML);
                        printWindow.document.write('</body></html>');
                        printWindow.document.close();
                        printWindow.print();
                    }

                    // Add smooth scroll to top
                    $(window).scroll(function () {
                        if ($(this).scrollTop() > 100) {
                            if ($('#scrollToTop').length === 0) {
                                $('body').append('<button id="scrollToTop" style="position:fixed;bottom:20px;right:20px;background:#667eea;color:white;border:none;border-radius:50%;width:50px;height:50px;cursor:pointer;z-index:1000;"><i class="fas fa-arrow-up"></i></button>');
                            }
                        } else {
                            $('#scrollToTop').remove();
                        }
                    });

                    $(document).on('click', '#scrollToTop', function () {
                        $('html, body').animate({ scrollTop: 0 }, 500);
                    });

                    // Loading animation on page load
                    $(window).on('load', function () {
                        $('.loading').fadeOut(500);
                    });

                    // Debug functions for testing - call from browser console
                    window.testPaginationAPI = function () {
                        console.log('🧪 Testing Pagination API...');
                        $.get('/DN/TestPaginationAPI')
                            .done(function (response) {
                                console.log('✅ Test API Response:', response);
                                if (response.success && response.sampleData) {
                                    console.log('📊 Sample data structure:', response.sampleData[0]);
                                    console.log('📊 Available columns:', Object.keys(response.sampleData[0]));
                                }
                            })
                            .fail(function (xhr) {
                                console.error('❌ Test API failed:', xhr.responseText);
                            });
                    };

                    window.testDirectPagination = function () {
                        console.log('🧪 Testing Direct Pagination POST...');
                        $.post('/DN/GetPaginatedData', {
                            draw: 1,
                            start: 0,
                            length: 5,
                            'search[value]': '',
                            'order[0][column]': 0,
                            'order[0][dir]': 'asc'
                        })
                            .done(function (response) {
                                console.log('✅ Direct Pagination Response:', response);
                                if (response.data && response.data.length > 0) {
                                    console.log('📊 First row data:', response.data[0]);
                                    console.log('📊 Available properties:', Object.keys(response.data[0]));
                                }
                            })
                            .fail(function (xhr) {
                                console.error('❌ Direct Pagination failed:', xhr.responseText);
                            });
                    };

                    window.reloadDataTable = function () {
                        console.log('🔄 Reloading DataTable...');
                        if (dataTable) {
                            dataTable.ajax.reload();
                        } else {
                            console.log('⚠️ DataTable not initialized yet');
                        }
                    };

                    console.log('🔧 Debug functions available:');
                    console.log('   - testPaginationAPI()');
                    console.log('   - testDirectPagination()');
                    console.log('   - reloadDataTable()');

                    // FORCE SHOW TABLE - call this function from browser console to make table visible
                    window.forceShowTable = function () {
                        console.log('🔧 Force showing table container...');
                        $('#tableLoading').hide();
                        $('#tableError').hide();
                        $('#tableContainer').show();

                        // Check if table exists
                        if ($('#dataTable').length > 0) {
                            console.log('✅ Table HTML exists');
                            console.log('📊 Table rows:', $('#dataTable tbody tr').length);
                        } else {
                            console.log('❌ Table HTML not found');
                        }

                        // Check DataTable instance
                        if (dataTable) {
                            console.log('✅ DataTable instance exists');
                            console.log('📊 DataTable info:', dataTable.page.info());
                        } else {
                            console.log('❌ DataTable instance not found');
                        }
                    };

                    // EMERGENCY FIX - call this function from browser console
                    window.fixDataTable = function () {
                        console.log('🔧 Applying emergency fix...');

                        // Force show container first
                        $('#tableLoading').hide();
                        $('#tableError').hide();
                        $('#tableContainer').show();

                        // Destroy existing table if it exists
                        if (dataTable) {
                            try {
                                dataTable.destroy();
                            } catch (e) {
                                console.log('⚠️ Error destroying table:', e);
                            }
                        }

                        // Recreate table HTML
                        $('#tableContainer').html(`
                                                                                                                                                                <table id="dataTable" class="table table-striped table-hover">
                                                                                                                                                                    <thead>
                                                                                                                                                                        <tr>
                                                                                                                                                                            <th>STT</th>
                                                                                                                                                                            <th>Năm</th>
                                                                                                                                                                            <th>Mã số thuế</th>
                                                                                                                                                                            <th>Tên doanh nghiệp</th>
                                                                                                                                                                            <th>Loại hình KT</th>
                                                                                                                                                                            <th>Tỉnh/TP</th>
                                                                                                                                                                            <th>Huyện/Quận</th>
                                                                                                                                                                            <th>Xã/Phường</th>
                                                                                                                                                                            <th>Địa chỉ</th>
                                                                                                                                                                            <th>Điện thoại</th>
                                                                                                                                                                            <th>Email</th>
                                                                                                                                                                            <th>Vùng KT</th>
                                                                                                                                                                        </tr>
                                                                                                                                                                    </thead>
                                                                                                                                                                    <tbody></tbody>
                                                                                                                                                                </table>
                                                                                                                                                            `);

                        // Reinitialize with correct column mapping
                        try {
                            dataTable = $('#dataTable').DataTable({
                                processing: true,
                                serverSide: true,
                                responsive: true,
                                pageLength: 30,
                                ajax: {
                                    url: '/DN/GetPaginatedData',
                                    type: 'POST',
                                    error: function (xhr, error, thrown) {
                                        console.error('❌ AJAX Error:', error, thrown);
                                        console.error('❌ Response:', xhr.responseText);
                                    },
                                    success: function (response) {
                                        console.log('✅ AJAX Success:', response);
                                    }
                                },
                                columns: [
                                    { data: 'stt', className: 'text-center', render: function (data) { return '<strong>' + (data || '') + '</strong>'; } },
                                    { data: 'nam', className: 'text-center', render: function (data) { return data ? '<span class="badge bg-primary">' + data + '</span>' : 'N/A'; } },
                                    { data: 'masothue', className: 'text-center', render: function (data) { return '<code>' + (data || 'N/A') + '</code>'; } },
                                    { data: 'tenDN', render: function (data) { return '<strong>' + (data || 'N/A') + '</strong>'; } },
                                    { data: 'loaihinhkte', render: function (data) { return data ? '<span class="badge bg-secondary">' + data + '</span>' : 'N/A'; } },
                                    { data: 'maTinh_Dieutra', defaultContent: 'N/A' },
                                    { data: 'maHuyen_Dieutra', defaultContent: 'N/A' },
                                    { data: 'maXa_Dieutra', defaultContent: 'N/A' },
                                    { data: 'diachi', defaultContent: 'N/A' },
                                    { data: 'dienthoai', defaultContent: 'N/A' },
                                    { data: 'email', defaultContent: 'N/A' },
                                    { data: 'region', render: function (data) { return data ? '<span class="badge bg-info">' + data + '</span>' : 'N/A'; } }
                                ],
                                language: {
                                    "sProcessing": "Đang xử lý...",
                                    "sLengthMenu": "Hiển thị _MENU_ mục",
                                    "sZeroRecords": "Không tìm thấy dòng nào phù hợp",
                                    "sInfo": "Đang hiển thị _START_ đến _END_ trong tổng số _TOTAL_ mục",
                                    "sInfoEmpty": "Đang hiển thị 0 đến 0 trong tổng số 0 mục",
                                    "sInfoFiltered": "(được lọc từ _MAX_ mục)",
                                    "sSearch": "Tìm kiếm:",
                                    "oPaginate": {
                                        "sFirst": "Đầu",
                                        "sPrevious": "Trước",
                                        "sNext": "Tiếp",
                                        "sLast": "Cuối"
                                    }
                                },
                                order: [[0, 'asc']],
                                initComplete: function () {
                                    console.log('✅ DataTable fixed and reinitialized!');
                                }
                            });
                        } catch (e) {
                            console.error('❌ DataTable init error:', e);
                        }
                    };

                    // Auto-fix on page load - but show table container first
                    setTimeout(function () {
                        console.log('🔧 Auto-fix: Force showing table container...');
                        $('#tableContainer').show(); // Force show regardless

                        if (typeof dataTable === 'undefined' || !dataTable) {
                            console.log('🔧 Auto-applying fix...');
                            window.fixDataTable();
                        }
                    }, 2000); // Reduced timeout

                    console.log('🚨 EMERGENCY FIX AVAILABLE:');
                    console.log('   - populateTableManually() - Show 30 rows from AJAX data');
                    console.log('   - forceShowTable() - Force show table container');
                    console.log('   - fixDataTable() - Full reinitialize');
                    console.log('   - testPaginationAPI() - Test API');
                    console.log('   - testDirectPagination() - Test direct calls');

                    // MANUAL TABLE POPULATION - use the 30 rows from AJAX response
                    window.populateTableManually = function () {
                        console.log('🔧 Manually populating table with AJAX data...');

                        // First test with sample data
                        testDirectPagination().then(function () {
                            // The response should be available in the success callback
                            $.post('/DN/GetPaginatedData', {
                                draw: 1,
                                start: 0,
                                length: 30,
                                'search[value]': '',
                                'order[0][column]': 0,
                                'order[0][dir]': 'asc'
                            })
                                .done(function (response) {
                                    console.log('✅ Got data for manual population:', response);

                                    if (response.data && response.data.length > 0) {
                                        // Clear existing table
                                        $('#tableContainer').show();
                                        $('#tableLoading').hide();

                                        // Build table HTML manually
                                        let tableHTML = `
                                                                            <table id="dataTable" class="table table-striped table-hover">
                                                                                <thead>
                                                                                    <tr>
                                                                                        <th>STT</th>
                                                                                        <th>Năm</th>
                                                                                        <th>Mã số thuế</th>
                                                                                        <th>Tên doanh nghiệp</th>
                                                                                        <th>Loại hình KT</th>
                                                                                        <th>Tỉnh/TP</th>
                                                                                        <th>Huyện/Quận</th>
                                                                                        <th>Xã/Phường</th>
                                                                                        <th>Địa chỉ</th>
                                                                                        <th>Điện thoại</th>
                                                                                        <th>Email</th>
                                                                                        <th>Vùng KT</th>
                                                                                    </tr>
                                                                                </thead>
                                                                                <tbody>`;

                                        // Add each row
                                        response.data.forEach(function (row) {
                                            tableHTML += `
                                                                                <tr>
                                                                                    <td class="text-center"><strong>${row.stt || ''}</strong></td>
                                                                                    <td class="text-center"><span class="badge bg-primary">${row.nam || 'N/A'}</span></td>
                                                                                    <td class="text-center"><code>${row.masothue || 'N/A'}</code></td>
                                                                                    <td><strong>${row.tenDN || 'N/A'}</strong></td>
                                                                                    <td><span class="badge bg-secondary">${row.loaihinhkte || 'N/A'}</span></td>
                                                                                    <td>${row.maTinh_Dieutra || 'N/A'}</td>
                                                                                    <td>${row.maHuyen_Dieutra || 'N/A'}</td>
                                                                                    <td>${row.maXa_Dieutra || 'N/A'}</td>
                                                                                    <td>${row.diachi || 'N/A'}</td>
                                                                                    <td>${row.dienthoai || 'N/A'}</td>
                                                                                    <td>${row.email || 'N/A'}</td>
                                                                                    <td><span class="badge bg-info">${row.region || 'N/A'}</span></td>
                                                                                </tr>`;
                                        });

                                        tableHTML += `
                                                                                </tbody>
                                                                            </table>
                                                                            <div class="mt-3 text-center">
                                                                                <p class="text-muted">Hiển thị ${response.data.length} bản ghi đầu tiên từ tổng số ${response.recordsTotal.toLocaleString()} bản ghi</p>
                                                                                <button onclick="fixDataTable()" class="btn btn-primary">Kích hoạt Pagination</button>
                                                                            </div>`;

                                        // Replace table container content
                                        $('#tableContainer').html(tableHTML);

                                        console.log('✅ Table populated manually with ' + response.data.length + ' rows!');
                                    }
                                })
                                .fail(function (xhr) {
                                    console.error('❌ Failed to get data for manual population:', xhr.responseText);
                                });
                        });
                    };
                </script>

                <!-- Print Styles -->
                <style media="print">
                    .top-nav,
                    .nav-actions,
                    .export-buttons,
                    .footer,
                    .dataTables_filter,
                    .dataTables_length,
                    .dataTables_paginate,
                    .dataTables_info {
                        display: none !important;
                    }

                    .content-card {
                        box-shadow: none !important;
                        margin: 0 !important;
                    }

                    #dataTable {
                        font-size: 10px !important;
                    }

                    #dataTable th,
                    #dataTable td {
                        padding: 4px !important;
                    }

                    body {
                        background: white !important;
                    }
                </style>
            </body>

            </html>
